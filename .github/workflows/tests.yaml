name: 'Tests'
on: [push]

jobs:
  # lint:
  #   name: 'Lint'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 'Checkout repository'
  #       uses: actions/checkout@v4
  #       with:
  #         lfs: 'true'

  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '20.x'

  #     - uses: pnpm/action-setup@v3
  #       name: Install pnpm
  #       with:
  #         version: 8
  #         run_install: false

  #     - name: Get pnpm store directory
  #       shell: bash
  #       run: |
  #         echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

  #     - uses: actions/cache@v4
  #       name: Setup pnpm cache
  #       with:
  #         path: ${{ env.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: Install dependencies
  #       working-directory: ./packages/testeroni
  #       run: pnpm install

  #     - name: 'Lint'
  #       working-directory: ./packages/testeroni
  #       run: 'pnpm lint'

  unit-test:
    name: 'Unit Test'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          lfs: 'true'

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true

      - name: Install dependencies
        working-directory: ./packages/testeroni
        run: pnpm install

      - name: 'Unit Test'
        working-directory: ./packages/testeroni
        run: 'pnpm test'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: thekevinscott/testeroniionist

  integration-test:
    name: 'Integration Tests'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          lfs: 'true'

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true

      - name: Install dependencies for package and build
        working-directory: ./packages/testeroni
        run: pnpm install && pnpm build

      - name: Install dependencies for repo
        run: pnpm install

      - name: 'Integration Test'
        run: 'pnpm test'

  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
        with:
          lfs: 'true'

      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     detached: true

      - name: Install dependencies
        working-directory: ./packages/testeroni
        run: pnpm install

      - name: 'Build'
        working-directory: ./packages/testeroni
        run: 'pnpm build'

      - name: 'Check build output'
        working-directory: ./packages/testeroni
        run: 'pnpm build:check'
